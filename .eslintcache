[{"/Users/a58/Desktop/my/beautiful/src/index.tsx":"1","/Users/a58/Desktop/my/beautiful/src/reportWebVitals.ts":"2","/Users/a58/Desktop/my/beautiful/src/App.tsx":"3","/Users/a58/Desktop/my/beautiful/src/components/reverse/index.tsx":"4","/Users/a58/Desktop/my/beautiful/src/components/cube/index.tsx":"5","/Users/a58/Desktop/my/beautiful/src/components/demo/index.tsx":"6"},{"size":500,"mtime":1612167040698,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1612167040698,"results":"9","hashOfConfig":"8"},{"size":1961,"mtime":1613983248688,"results":"10","hashOfConfig":"8"},{"size":965,"mtime":1612233767869,"results":"11","hashOfConfig":"8"},{"size":7704,"mtime":1613984456444,"results":"12","hashOfConfig":"8"},{"size":798,"mtime":1613959768240,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"19d2edm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/Users/a58/Desktop/my/beautiful/src/index.tsx",[],["28","29"],"/Users/a58/Desktop/my/beautiful/src/reportWebVitals.ts",[],"/Users/a58/Desktop/my/beautiful/src/App.tsx",[],"/Users/a58/Desktop/my/beautiful/src/components/reverse/index.tsx",[],"/Users/a58/Desktop/my/beautiful/src/components/cube/index.tsx",["30","31"],"/Users/a58/Desktop/my/beautiful/src/components/demo/index.tsx",["32"],"import React, { useRef, useEffect, useState } from 'react';\n\ninterface DemoProps {\n  text?: string;\n}\n\ninterface anyProps {\n  [x: string]: string | number | number[];\n}\n\nconst usePrevious = (state: any) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = state;\n  });\n  return ref.current;\n};\n\nconst Demo: React.FC<DemoProps> = (props) => {\n  const { text } = props;\n  const [now, setNow] = useState(0);\n  const last = usePrevious(now);\n  const add = () => {\n    setNow(now + 1);\n  };\n  const lock = () => {\n    console.log(now);\n  };\n  return (\n    <div>\n      <p>{text}</p>\n      <button onClick={add}>添加值</button>\n      <button onClick={lock}>打印值</button>\n      <p>\n        上一个值：{last}，现在的值{now}\n      </p>\n    </div>\n  );\n};\n\nexport default Demo;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":159,"column":6,"nodeType":"39","endLine":159,"endColumn":34,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"41","line":203,"column":6,"nodeType":"39","endLine":203,"endColumn":24,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":11,"nodeType":"45","messageId":"46","endLine":7,"endColumn":19},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'sizeX', 'sizeY', and 'sizeZ'. Either include them or remove the dependency array.","ArrayExpression",["49"],"React Hook useMemo has a missing dependency: 'fixed'. Either include it or remove the dependency array.",["50"],"@typescript-eslint/no-unused-vars","'anyProps' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [direction, sizeX, unit, sizeY, sizeZ]",{"range":"55","text":"56"},"Update the dependencies array to be: [direction, index, fixed]",{"range":"57","text":"58"},[4224,4252],"[direction, sizeX, unit, sizeY, sizeZ]",[5480,5498],"[direction, index, fixed]"]